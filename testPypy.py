import unittest

from mainPypy import knapSack

class TestSolvers(unittest.TestCase):
    def test_SolverSmall(self):
        capacities=[84]
        n=10
        weight=[[50,26,26,29,14,18,1,30,43,16]]
        values=[18,1,18,44,46,15,16,2,47,3]
        result = knapSack(capacities[0],weight[0],values,n)
        self.assertEqual(result, 127)
    def test_SolverMedium(self):
        capacities=[4570]
        n=50
        weight=[[781, 742, 942, 442, 856, 968, 925, 168, 714, 377, 763, 357, 75, 217, 541, 919, 819, 694, 812, 134, 825, 487, 237, 127, 810, 299, 886, 430, 306, 359, 846, 1000, 707, 30, 618, 238, 679, 386, 208, 669, 51, 753, 953, 59, 738, 140, 1000, 596, 682, 57]]
        values=[781, 742, 942, 442, 856, 968, 925, 168, 714, 377, 763, 357, 75, 217, 541, 919, 819, 694, 812, 134, 825, 487, 237, 127, 810, 299, 886, 430, 306, 359, 846, 1000, 707, 30, 618, 238, 679, 386, 208, 669, 51, 753, 953, 59, 738, 140, 1000, 596, 682, 57]
        result = knapSack(capacities[0],weight[0],values,n)
        self.assertEqual(result, 4570)
    def test_SolverLarge(self):
        capacities=[217655]
        n=500
        weight=[[655, 256, 896, 892, 346, 386, 927, 282, 508, 67, 165, 591, 981, 19, 95, 665, 893, 112, 822, 192, 995, 241, 679, 9, 596, 141, 256, 1000, 228, 841, 528, 394, 645, 24, 188, 984, 961, 732, 890, 839, 277, 139, 11, 485, 156, 142, 514, 558, 956, 835, 636, 652, 978, 290, 795, 405, 805, 636, 587, 470, 33, 935, 7, 678, 707, 454, 289, 845, 300, 957, 237, 811, 212, 915, 280, 701, 156, 160, 106, 705, 151, 78, 277, 379, 190, 371, 273, 89, 239, 820, 558, 961, 609, 566, 29, 106, 119, 678, 252, 151, 206, 473, 412, 184, 493, 341, 624, 443, 520, 606, 75, 480, 489, 468, 742, 346, 644, 594, 958, 57, 492, 274, 278, 820, 399, 123, 486, 187, 51, 972, 472, 955, 164, 467, 850, 723, 860, 814, 333, 651, 845, 939, 409, 813, 598, 315, 11, 363, 903, 712, 412, 288, 26, 128, 591, 259, 32, 954, 782, 837, 253, 829, 745, 460, 930, 719, 941, 392, 533, 35, 685, 218, 319, 940, 816, 909, 730, 222, 111, 636, 332, 900, 48, 955, 348, 67, 971, 682, 120, 366, 233, 860, 905, 59, 452, 534, 844, 890, 144, 906, 997, 990, 36, 891, 938, 740, 516, 243, 849, 113, 302, 657, 687, 224, 854, 46, 150, 400, 801, 662, 674, 747, 659, 148, 945, 931, 37, 365, 589, 616, 62, 79, 871, 717, 429, 739, 609, 112, 352, 909, 599, 295, 756, 404, 995, 448, 906, 101, 773, 177, 714, 466, 923, 622, 543, 376, 306, 985, 535, 486, 145, 900, 981, 601, 358, 698, 868, 860, 936, 891, 618, 829, 649, 902, 414, 603, 117, 553, 704, 411, 251, 84, 724, 994, 887, 107, 427, 941, 1, 874, 46, 940, 510, 931, 183, 429, 696, 834, 398, 60, 173, 394, 764, 792, 81, 401, 872, 241, 281, 558, 348, 582, 550, 747, 947, 443, 945, 973, 841, 239, 209, 720, 166, 803, 790, 384, 985, 855, 673, 450, 886, 799, 770, 65, 387, 938, 997, 572, 293, 299, 194, 924, 225, 352, 824, 436, 633, 664, 254, 201, 494, 994, 174, 705, 701, 920, 654, 576, 591, 58, 499, 69, 448, 559, 596, 531, 580, 119, 344, 363, 817, 875, 558, 31, 885, 46, 375, 97, 525, 21, 922, 274, 286, 377, 84, 271, 188, 934, 745, 558, 797, 603, 683, 582, 433, 466, 550, 428, 257, 26, 46, 842, 368, 687, 254, 690, 698, 596, 510, 616, 16, 646, 480, 989, 205, 657, 775, 368, 921, 121, 652, 279, 687, 575, 878, 427, 804, 987, 485, 585, 567, 296, 764, 277, 967, 467, 329, 385, 398, 621, 633, 595, 1000, 336, 957, 477, 831, 366, 667, 278, 767, 421, 451, 950, 617, 743, 671, 918, 574, 142, 885, 390, 538, 509, 740, 944, 746, 257, 241, 649, 811, 318, 269, 768, 441, 454, 52, 951, 72, 700, 853, 47, 107, 647, 953, 616, 919, 930, 362, 173, 706, 464, 305, 174, 77, 709, 268, 39, 20, 319]]
        values=[655, 256, 896, 892, 346, 386, 927, 282, 508, 67, 165, 591, 981, 19, 95, 665, 893, 112, 822, 192, 995, 241, 679, 9, 596, 141, 256, 1000, 228, 841, 528, 394, 645, 24, 188, 984, 961, 732, 890, 839, 277, 139, 11, 485, 156, 142, 514, 558, 956, 835, 636, 652, 978, 290, 795, 405, 805, 636, 587, 470, 33, 935, 7, 678, 707, 454, 289, 845, 300, 957, 237, 811, 212, 915, 280, 701, 156, 160, 106, 705, 151, 78, 277, 379, 190, 371, 273, 89, 239, 820, 558, 961, 609, 566, 29, 106, 119, 678, 252, 151, 206, 473, 412, 184, 493, 341, 624, 443, 520, 606, 75, 480, 489, 468, 742, 346, 644, 594, 958, 57, 492, 274, 278, 820, 399, 123, 486, 187, 51, 972, 472, 955, 164, 467, 850, 723, 860, 814, 333, 651, 845, 939, 409, 813, 598, 315, 11, 363, 903, 712, 412, 288, 26, 128, 591, 259, 32, 954, 782, 837, 253, 829, 745, 460, 930, 719, 941, 392, 533, 35, 685, 218, 319, 940, 816, 909, 730, 222, 111, 636, 332, 900, 48, 955, 348, 67, 971, 682, 120, 366, 233, 860, 905, 59, 452, 534, 844, 890, 144, 906, 997, 990, 36, 891, 938, 740, 516, 243, 849, 113, 302, 657, 687, 224, 854, 46, 150, 400, 801, 662, 674, 747, 659, 148, 945, 931, 37, 365, 589, 616, 62, 79, 871, 717, 429, 739, 609, 112, 352, 909, 599, 295, 756, 404, 995, 448, 906, 101, 773, 177, 714, 466, 923, 622, 543, 376, 306, 985, 535, 486, 145, 900, 981, 601, 358, 698, 868, 860, 936, 891, 618, 829, 649, 902, 414, 603, 117, 553, 704, 411, 251, 84, 724, 994, 887, 107, 427, 941, 1, 874, 46, 940, 510, 931, 183, 429, 696, 834, 398, 60, 173, 394, 764, 792, 81, 401, 872, 241, 281, 558, 348, 582, 550, 747, 947, 443, 945, 973, 841, 239, 209, 720, 166, 803, 790, 384, 985, 855, 673, 450, 886, 799, 770, 65, 387, 938, 997, 572, 293, 299, 194, 924, 225, 352, 824, 436, 633, 664, 254, 201, 494, 994, 174, 705, 701, 920, 654, 576, 591, 58, 499, 69, 448, 559, 596, 531, 580, 119, 344, 363, 817, 875, 558, 31, 885, 46, 375, 97, 525, 21, 922, 274, 286, 377, 84, 271, 188, 934, 745, 558, 797, 603, 683, 582, 433, 466, 550, 428, 257, 26, 46, 842, 368, 687, 254, 690, 698, 596, 510, 616, 16, 646, 480, 989, 205, 657, 775, 368, 921, 121, 652, 279, 687, 575, 878, 427, 804, 987, 485, 585, 567, 296, 764, 277, 967, 467, 329, 385, 398, 621, 633, 595, 1000, 336, 957, 477, 831, 366, 667, 278, 767, 421, 451, 950, 617, 743, 671, 918, 574, 142, 885, 390, 538, 509, 740, 944, 746, 257, 241, 649, 811, 318, 269, 768, 441, 454, 52, 951, 72, 700, 853, 47, 107, 647, 953, 616, 919, 930, 362, 173, 706, 464, 305, 174, 77, 709, 268, 39, 20, 319]
        result = knapSack(capacities[0],weight[0],values,n)
        self.assertEqual(result, 217655)

if __name__ == '__main__':
    unittest.main()
